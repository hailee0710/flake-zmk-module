#include "anywhy_flake.dtsi"

&large_transform {
    col-offset = <6>;
};

&medium_transform {
    col-offset = <6>;
};

&small_transform {
    col-offset = <6>;
};

&kscan0 {
    compatible = "zmk,kscan-gpio-matrix";
    wakeup-source;

    col-gpios
        = <&gpio0 9 GPIO_ACTIVE_HIGH>
        , <&gpio0 10 GPIO_ACTIVE_HIGH>
        , <&gpio1 11 GPIO_ACTIVE_HIGH>
        , <&gpio1 13 GPIO_ACTIVE_HIGH>
        , <&gpio0 20 GPIO_ACTIVE_HIGH>
        , <&gpio0 17 GPIO_ACTIVE_HIGH>
        ;

    row-gpios
        = <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio1 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio1 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio0 31  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        ;
};

&large_layout {
    kscan = <&kscan0>;
};

#define HAS_MOUSE_TP


#include <input/processors.dtsi>
#include "include/mouse_tp.dtsi"

// We have the trackpoint on the right peripheral split, so
// set the actual trackpoint as the device for the peripheral. 
/{
  split_inputs {
    #address-cells = <1>;
    #size-cells = <0>;
    tpoint_split: tpoint_split@0 { 
        compatible = "zmk,input-split"; 
        reg = <0>; 
        device = <&mouse_ps2>; 
        input-processors = <&zip_xy_swap_mapper>;
    };
  };
  
  // We need to add a listener to all the splits,
  // i.e., for both the central and peripheral(s).

  tpoint_listener: tpoint_listener {
        compatible = "zmk,input-listener";
        status = "disabled";
        device = <&tpoint_split>;
        input-processors = <&zip_xy_scaler 0 1>;
        scroller {
            layers = <10>;
            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_scaler 1 8>, <&zip_xy_to_scroll_mapper>;
        };
        mouse {
            layers = <9>;
            input-processors = <&zip_xy_scaler 1 1>;
            
        };

  };
};